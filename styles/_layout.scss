// SIMPLE GRID - SASS/SCSS
// Modified version of SimpleGrid (https://simplegrid.io/)

/*$spacing: (
    "0": 0,
    "1": 0.25rem,
    "2": 0.5rem,
    "3": 0.75rem,
    "4": 1rem,
    "5": 1.25rem,
    "6": 1.5rem,
    "7": 1.75rem,
    "8": 2rem,
    "auto": auto
);

$zIndex: (
    "0": 0,
    "1": 1,
    "2": 2,
    "3": 3,
    "4": 4
);

.z {
    @include generate($zIndex) using ($value) {
        z-index: $value;
    }
}

// padding
.p {
    @include generate($spacing) using ($value) {
        padding: $value;
    }
}
.pt {
    @include generate($spacing) using ($value) {
        padding-top: $value;
    }
}
.pb {
    @include generate($spacing) using ($value) {
        padding-bottom: $value;
    }
}
.pl {
    @include generate($spacing) using ($value) {
        padding-left: $value;
    }
}
.pr {
    @include generate($spacing) using ($value) {
        padding-right: $value;
    }
}
.px {
    @include generate($spacing) using ($value) {
        padding-left: $value;
        padding-right: $value;
    }
}
.py {
    @include generate($spacing) using ($value) {
        padding-top: $value;
        padding-bottom: $value;
    }
}
// margin
.m {
    @include generate($spacing) using ($value) {
        margin: $value !important;
    }
}
.mt {
    @include generate($spacing) using ($value) {
        margin-top: $value !important;
    }
}
.mb {
    @include generate($spacing) using ($value) {
        margin-bottom: $value !important;
    }
}
.ml {
    @include generate($spacing) using ($value) {
        margin-left: $value !important;
    }
}
.mr {
    @include generate($spacing) using ($value) {
        margin-right: $value !important;
    }
}
.mx {
    @include generate($spacing) using ($value) {
        margin-right: $value !important;
        margin-left: $value !important;
    }
}
.my {
    @include generate($spacing) using ($value) {
        margin-top: $value !important;
        margin-bottom: $value !important;
    }
}


// utility
.left {
    text-align: left;
}

.right {
    text-align: right;
}

.center {
    text-align: center;
    margin-left: auto;
    margin-right: auto;
}

.justify {
    text-align: justify;
}

.hidden-sm {
    display: none;
}

.float-right {
    float: right !important;
}

.float-left {
    float: left !important;
}

.flex {
    display: flex;
}

.flex-row {
    flex-direction: row;
}

.flex-column {
    flex-direction: column;
}

.align-items-end {
    align-items: flex-end;
}

// grid

$width: 100%;
$gutter: 4%;
$breakpoint-small: 33.75em; // 540px
$breakpoint-med: 45em; // 720px
$breakpoint-large: 60em; // 960px

.container {
    width: 90%;
    margin-left: auto;
    margin-right: auto;

    @media only screen and (min-width: $breakpoint-small) {
        width: 80%;
    }

    @media only screen and (min-width: $breakpoint-large) {
        width: 75%;
        max-width: 60rem;
    }
}

.row {
    position: relative;
    width: 100%;
}

.row [class^="col"] {
    float: left;
    margin: 0;
    min-height: 0.125rem;
}

.row::after {
    content: "";
    display: table;
    clear: both;
}

.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6,
.col-7,
.col-8,
.col-9,
.col-10,
.col-11,
.col-12 {
    width: $width;
}

.col-1-sm {
    width: ($width / 12) - ($gutter * 11 / 12);
}
.col-2-sm {
    width: ($width / 6) - ($gutter * 10 / 12);
}
.col-3-sm {
    width: ($width / 4) - ($gutter * 9 / 12);
}
.col-4-sm {
    width: ($width / 3) - ($gutter * 8 / 12);
}
.col-5-sm {
    width: ($width / (12 / 5)) - ($gutter * 7 / 12);
}
.col-6-sm {
    width: ($width / 2) - ($gutter * 6 / 12);
}
.col-7-sm {
    width: ($width / (12 / 7)) - ($gutter * 5 / 12);
}
.col-8-sm {
    width: ($width / (12 / 8)) - ($gutter * 4 / 12);
}
.col-9-sm {
    width: ($width / (12 / 9)) - ($gutter * 3 / 12);
}
.col-10-sm {
    width: ($width / (12 / 10)) - ($gutter * 2 / 12);
}
.col-11-sm {
    width: ($width / (12 / 11)) - ($gutter * 1 / 12);
}
.col-12-sm {
    width: $width;
}

@media only screen and (min-width: $breakpoint-med) {
    .col-1 {
        width: ($width / 12) - ($gutter * 11 / 12);
    }
    .col-2 {
        width: ($width / 6) - ($gutter * 10 / 12);
    }
    .col-3 {
        width: ($width / 4) - ($gutter * 9 / 12);
    }
    .col-4 {
        width: ($width / 3) - ($gutter * 8 / 12);
    }
    .col-5 {
        width: ($width / (12 / 5)) - ($gutter * 7 / 12);
    }
    .col-6 {
        width: ($width / 2) - ($gutter * 6 / 12);
    }
    .col-7 {
        width: ($width / (12 / 7)) - ($gutter * 5 / 12);
    }
    .col-8 {
        width: ($width / (12 / 8)) - ($gutter * 4 / 12);
    }
    .col-9 {
        width: ($width / (12 / 9)) - ($gutter * 3 / 12);
    }
    .col-10 {
        width: ($width / (12 / 10)) - ($gutter * 2 / 12);
    }
    .col-11 {
        width: ($width / (12 / 11)) - ($gutter * 1 / 12);
    }
    .col-12 {
        width: $width;
    }

    .hidden-sm {
        display: block;
    }
}
*/